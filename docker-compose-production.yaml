version: '3.8'
networks:
  signbank:
    driver: bridge

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-prod:5432/${POSTGRES_DB:-signbank_prod}?schema=public
        ADMIN_EMAIL: ${ADMIN_EMAIL}
        ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    container_name: backend-prod
    environment:
      - PORT=443
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-prod:5432/${POSTGRES_DB:-signbank_prod}?schema=public
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - BASE_URL=${BASE_URL:-localhost}
      - DUFS_URL=${DUFS_URL}
      - TYPESENSE_HOST=${TYPESENSE_HOST}
      - TYPESENSE_PORT=${TYPESENSE_PORT}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - PRISMA_CLI_BINARY_TARGETS=linux-musl,linux-musl-openssl-3.0.x
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-signbank_prod}
      - NODE_ENV=production
    volumes:
      - ./nginx/certs:/app/certs:ro
    ports:
      - 9229:9229
    cap_add:
      - NET_BIND_SERVICE
    networks:
      - signbank
    restart: always

    
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_BASE_URL: ${BASE_URL:-localhost}
    container_name: frontend-prod
    environment:
      - VITE_BASE_URL=${BASE_URL:-localhost}
    networks:
      - signbank    
    restart: always
 

  postgres:
    image: postgres:16
    container_name: postgres-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-signbank_prod}
    networks:
      - signbank
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB:-signbank_prod}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  typesense:
    image: typesense/typesense:27.1
    restart: always
    container_name: typesense-prod
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data
    networks:
      - signbank
    volumes:
      - typesense_prod_data:/data
    command: '--data-dir /data --api-key=${TYPESENSE_API_KEY} --enable-cors'
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8108/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  dufs:
    image: sigoden/dufs
    container_name: dufs-prod
    volumes:
      - ./FileServer:/data 
    command: /data -A
    restart: always
    networks:
      - signbank

  nginx:
    image: nginx:1.23.1-alpine
    container_name: nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/ssl/certs/
    networks:
      - signbank
    restart: always

volumes:
  postgres_prod_data:
  typesense_prod_data:
  uploads_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/uploads
